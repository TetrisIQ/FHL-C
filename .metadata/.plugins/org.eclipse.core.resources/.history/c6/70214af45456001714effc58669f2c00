/*
 * anacae.c
 *
 *  Created on: 20.06.2017
 *      Author: alex
 */

#include "anacae.h"
#include "caesar.h"
#include <string.h>
#include <stdio.h>
#include <ctype.h>

void anacae(char* text) {
    int textSize = StringLength(text);

    char offset = 'E' - (findCharacterE(text, textSize));
    caesar(text, offset);

}

char findCharacterE(char* text, int textSize) {
    int i = 0;
            int charCount = 0;
            char chars[256];
            int frequency[256];
            char e = '\0';
            int indexInCharCounter;
            char c;
            while (text[i] != '\0') {
                    c = toupper(text[i]);
                    indexInCharCounter = contains(chars, c, charCount);
                    if (indexInCharCounter) {
                            frequency[indexInCharCounter] = frequency[indexInCharCounter] + 1;
                    }
                    else {
                            chars[charCount] = c;
                            frequency[charCount] = 1;
                            charCount++;
                    }
                    i++;
            }
            int maxAt = findMax(frequency, charCount);
            if (maxAt) {
                    e = chars[maxAt];
            }
    return e;

}

int charRate(char* text, char c, int textSize) {
    int counter = 0;
    int i;
    for (i = 0; i <= textSize; i++) {
        if (text[i] == c) {
            counter++;
        }
    }
    return counter;

}

int StringLength(char* text) {
    int i = 0;
    while (text[i] != '\0') {
        i++;
    }
    return i;
}

int contains(char chars[], char c, int length) {
        int i = 0;
        while (i < length) {
                if (chars[i] == c) {
                        return i;
                }
                i++;
        }
        return 0;
}
